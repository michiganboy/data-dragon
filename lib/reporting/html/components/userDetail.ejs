<section class="user-profile" id="user-<%= user.id %>">
  <div class="user-header">
    <h2 class="user-name"><%= user.username %></h2>
    <span class="risk-badge <%= getRiskLevelClass(user.riskLevel) %>">
      <%= user.riskLevel.toUpperCase() %> RISK
    </span>
  </div>
  
  <div class="user-stats-container">
    <div class="user-stat-box">
      <div class="user-stat-label">Risk Score</div>
      <div class="user-stat-value"><%= user.riskScore %></div>
    </div>
    
    <div class="user-stat-box">
      <div class="user-stat-label">Critical Events</div>
      <div class="user-stat-value"><%= user.criticalEvents %></div>
    </div>
    
    <div class="user-stat-box">
      <div class="user-stat-label">Security Warnings</div>
      <div class="user-stat-value"><%= user.warnings.length %></div>
    </div>
    
    <div class="user-stat-box">
      <div class="user-stat-label">Unique IPs</div>
      <div class="user-stat-value"><%= user.uniqueIPs %></div>
    </div>
    
    <div class="user-stat-box">
      <div class="user-stat-label">Login Count</div>
      <div class="user-stat-value"><%= user.loginCount %></div>
    </div>
  </div>
  
  <div class="risk-gauge-container">
    <h3>Risk Assessment</h3>
    <div class="risk-gauge">
      <canvas 
        class="user-risk-chart" 
        data-chart='<%= JSON.stringify({
          score: user.riskScore,
          level: user.riskLevel
        }) %>'
        width="200" 
        height="100"
      ></canvas>
      <div class="gauge-label">Risk Score</div>
    </div>
    
    <div class="risk-explanation">
      <% if (user.riskLevel === 'critical') { %>
        <p><strong>Critical Risk:</strong> This user has performed actions that require immediate security review. Potential data exfiltration or unauthorized access may have occurred.</p>
      <% } else if (user.riskLevel === 'high') { %>
        <p><strong>High Risk:</strong> This user has exhibited suspicious behavior patterns that warrant prompt investigation. Multiple security warnings have been identified.</p>
      <% } else if (user.riskLevel === 'medium') { %>
        <p><strong>Medium Risk:</strong> Some concerning activities detected. Review the security warnings below as part of standard security monitoring.</p>
      <% } else if (user.riskLevel === 'low') { %>
        <p><strong>Low Risk:</strong> Minor issues detected but overall activity appears normal. Routine review recommended.</p>
      <% } else { %>
        <p><strong>Minimal Risk:</strong> No significant security concerns detected for this user during the analysis period.</p>
      <% } %>
    </div>
  </div>
  
  <% if (user.timeline && user.timeline.length > 0) { %>
    <div class="user-timeline-section">
      <h3>Activity Timeline</h3>
      <div class="timeline-container">
        <div class="timeline">
          <% 
            // Process timeline for display
            const limitedTimeline = user.timeline.slice(-10); // Show last 10 events
            limitedTimeline.forEach((event, index) => {
              const isLeft = index % 2 === 0;
              const timelineClass = isLeft ? 'timeline-left' : 'timeline-right';
              let eventTypeClass = '';
              
              switch(event.type) {
                case 'warning':
                  eventTypeClass = event.severity === 'critical' ? 'timeline-critical' : 'timeline-warning';
                  break;
                case 'login':
                  eventTypeClass = 'timeline-login';
                  break;
                case 'anomaly':
                  eventTypeClass = 'timeline-anomaly';
                  break;
              }
          %>
            <div class="timeline-item <%= timelineClass %> <%= eventTypeClass %>">
              <div class="timeline-date"><%= formatDate(event.date, true) %></div>
              <div class="timeline-content">
                <% if (event.type === 'warning') { %>
                  <h4 class="timeline-title"><%= event.eventType %> Warning</h4>
                  <p><%= event.message %></p>
                <% } else if (event.type === 'login') { %>
                  <h4 class="timeline-title">User Login</h4>
                  <p>Login from IP: <%= event.sourceIp %></p>
                  <% if (event.weekend) { %>
                    <p><small>Weekend login</small></p>
                  <% } %>
                <% } else if (event.type === 'anomaly') { %>
                  <h4 class="timeline-title"><%= event.anomalyType %> Anomaly</h4>
                  <p><%= event.message %></p>
                <% } %>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    </div>
  <% } %>
  
  <% if (user.warnings && user.warnings.length > 0) { %>
    <div class="user-risk-events-section">
      <h3>Security Warnings</h3>
      
      <div class="risk-event-filters">
        <button class="filter-button active" data-filter="all">All Events</button>
        <% 
          // Create filter buttons for event types with 2+ events
          const eventTypeCounts = {};
          user.warnings.forEach(warning => {
            const type = warning.eventType || 'Unknown';
            eventTypeCounts[type] = (eventTypeCounts[type] || 0) + 1;
          });
          
          Object.entries(eventTypeCounts)
            .filter(([_, count]) => count >= 2)
            .sort((a, b) => b[1] - a[1])
            .slice(0, 5)  // Limit to top 5 event types
            .forEach(([type, count]) => {
        %>
          <button class="filter-button" data-filter="<%= type %>"><%= type %> (<%= count %>)</button>
        <% }); %>
      </div>
      
      <div class="risk-events">
        <% user.warnings.forEach(warning => { %>
          <div class="risk-event-card <%= warning.severity %>" data-event-type="<%= warning.eventType %>">
            <div class="risk-event-type"><%= warning.eventType %></div>
            <div class="risk-event-message"><%= warning.message %></div>
            <div class="risk-event-metadata">
              <span><%= formatDate(warning.date, true) %></span>
              <span class="risk-badge <%= getRiskLevelClass(warning.severity) %>"><%= warning.severity.toUpperCase() %></span>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  <% } else { %>
    <div class="no-warnings">
      <p>No security warnings detected for this user during the analysis period.</p>
    </div>
  <% } %>
  
  <div class="user-recommendations">
    <h3>Recommended Actions</h3>
    <ul class="recommendations-list">
      <% if (user.riskLevel === 'critical') { %>
        <li>Immediately review all user activity and consider temporary account suspension</li>
        <li>Investigate data access patterns for potential data exfiltration</li>
        <li>Reset user credentials and require strong multi-factor authentication</li>
        <li>Conduct a thorough interview with the user regarding suspicious activities</li>
      <% } else if (user.riskLevel === 'high') { %>
        <li>Review user permissions and remove unnecessary access rights</li>
        <li>Implement additional monitoring for sensitive data access</li>
        <li>Ensure multi-factor authentication is enabled</li>
        <li>Follow up on unusual activities with the user</li>
      <% } else if (user.riskLevel === 'medium') { %>
        <li>Validate the user's access requirements</li>
        <li>Provide security awareness training</li>
        <li>Review authentication methods</li>
      <% } else { %>
        <li>Standard security monitoring</li>
        <li>Include in routine security awareness training</li>
      <% } %>
    </ul>
  </div>
</section>

<style>
  .risk-gauge-container {
    display: flex;
    flex-direction: column;
    margin: 30px 0;
  }
  
  .risk-gauge {
    width: 200px;
    position: relative;
    margin: 20px 0;
  }
  
  .gauge-label {
    text-align: center;
    font-size: 0.9rem;
    color: var(--text-medium);
    margin-top: 5px;
  }
  
  .chart-center-text {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    text-align: center;
    font-size: 1.5rem;
    font-weight: bold;
  }
  
  .risk-explanation {
    background-color: var(--background-light);
    padding: 15px;
    border-radius: 4px;
    margin-top: 15px;
    border-left: 4px solid var(--primary-color);
  }
  
  .risk-event-filters {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 20px;
  }
  
  .filter-button {
    padding: 6px 12px;
    background: var(--background-light);
    border: 1px solid var(--text-light);
    border-radius: 30px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s;
  }
  
  .filter-button.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }
  
  .filter-button:hover:not(.active) {
    background-color: var(--primary-light);
    color: white;
  }
  
  .recommendations-list {
    list-style-type: none;
    padding: 0;
    margin: 20px 0;
  }
  
  .recommendations-list li {
    position: relative;
    padding-left: 25px;
    margin-bottom: 10px;
    line-height: 1.5;
  }
  
  .recommendations-list li:before {
    content: "â†’";
    position: absolute;
    left: 0;
    color: var(--primary-color);
    font-weight: bold;
  }
  
  .no-warnings {
    padding: 20px;
    background-color: var(--background-light);
    border-radius: 4px;
    text-align: center;
    margin: 30px 0;
    color: var(--text-medium);
  }
</style>

<%
function formatDate(date, includeTime = false) {
  if (!date) return 'N/A';
  
  const dateObj = new Date(date);
  if (isNaN(dateObj.getTime())) return 'Invalid Date';
  
  const options = { 
    year: 'numeric', 
    month: 'short', 
    day: 'numeric'
  };
  
  if (includeTime) {
    options.hour = '2-digit';
    options.minute = '2-digit';
  }
  
  return dateObj.toLocaleDateString('en-US', options);
}

function getRiskLevelClass(riskLevel) {
  switch(riskLevel.toLowerCase()) {
    case 'critical': return 'risk-critical';
    case 'high': return 'risk-high';
    case 'medium': return 'risk-medium';
    case 'low': return 'risk-low';
    default: return 'risk-none';
  }
}
%> 