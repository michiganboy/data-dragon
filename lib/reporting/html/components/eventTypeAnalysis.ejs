<section class="section">
  <h2 class="section-title">Event Type Analysis</h2>
  
  <div class="charts-container">
    <div class="chart-box">
      <h3 class="chart-title">Security Events by Type</h3>
      <% 
        // Prepare event type data for chart
        const eventTypes = [];
        const eventCounts = [];
        
        Object.entries(data.summary.eventTypeTotals || {})
          .sort((a, b) => b[1] - a[1]) // Sort by count descending
          .slice(0, 10) // Show top 10
          .forEach(([type, count]) => {
            eventTypes.push(type);
            eventCounts.push(count);
          });
      %>
      <canvas 
        id="event-type-chart" 
        data-chart='<%= JSON.stringify({
          labels: eventTypes,
          values: eventCounts
        }) %>'
        style="height: 300px;"
      ></canvas>
    </div>
    
    <div class="chart-box">
      <h3 class="chart-title">High Risk Event Types</h3>
      <div class="high-risk-events">
        <% 
          // List of high risk event types with descriptions
          const highRiskEvents = [
            { 
              type: 'ReportExport', 
              description: 'Export of Salesforce reports to local machine',
              riskLevel: 'critical'
            },
            { 
              type: 'DocumentAttachmentDownloads', 
              description: 'Download of file attachments',
              riskLevel: 'high'
            },
            { 
              type: 'ContentDistribution', 
              description: 'Creation of public sharing links',
              riskLevel: 'critical'
            },
            { 
              type: 'LoginAs', 
              description: 'Admin impersonation of another user',
              riskLevel: 'high'
            },
            { 
              type: 'ApexExecution', 
              description: 'Direct execution of Apex code',
              riskLevel: 'high'
            }
          ];
          
          // Filter to only show event types that have warnings
          const activeHighRiskEvents = highRiskEvents.filter(event => 
            Object.keys(data.summary.eventTypeTotals || {}).includes(event.type)
          );
        %>
        
        <% if (activeHighRiskEvents.length > 0) { %>
          <div class="high-risk-event-list">
            <% activeHighRiskEvents.forEach(event => { %>
              <div class="high-risk-event-item">
                <div class="event-type-badge <%= getRiskClass(event.riskLevel) %>">
                  <%= event.type %>
                </div>
                <div class="event-count">
                  <%= data.summary.eventTypeTotals[event.type] || 0 %> events
                </div>
                <div class="event-description">
                  <%= event.description %>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <p>No high risk event types detected in this analysis period.</p>
        <% } %>
      </div>
    </div>
  </div>
  
  <div style="margin-top: 30px;">
    <p>
      The Event Type Analysis shows the distribution of security events by type.
      <% if (eventTypes.length > 0 && eventCounts[0] > 10) { %>
        <strong><%= eventTypes[0] %></strong> is the most frequent event type with <%= eventCounts[0] %> occurrences.
      <% } %>
    </p>
    
    <p>
      <strong>What to Look For:</strong> Unusual spikes in specific event types often indicate potential security issues. Pay special attention
      to data export, file download, and permission change events as they are commonly associated with data exfiltration attempts.
    </p>
  </div>
</section>

<style>
  .high-risk-event-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-top: 20px;
  }
  
  .high-risk-event-item {
    display: flex;
    flex-direction: column;
    padding: 12px;
    background-color: var(--background-light);
    border-radius: 4px;
    border-left: 4px solid var(--risk-high);
  }
  
  .high-risk-event-item.critical {
    border-left-color: var(--risk-critical);
  }
  
  .event-type-badge {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 500;
    margin-bottom: 8px;
    background-color: var(--risk-high);
    color: white;
  }
  
  .risk-critical {
    background-color: var(--risk-critical);
  }
  
  .risk-high {
    background-color: var(--risk-high);
  }
  
  .event-count {
    font-size: 1.1rem;
    font-weight: 500;
    margin-bottom: 8px;
  }
  
  .event-description {
    font-size: 0.9rem;
    color: var(--text-medium);
  }
</style>

<%
function getRiskClass(riskLevel) {
  switch(riskLevel.toLowerCase()) {
    case 'critical': return 'risk-critical';
    case 'high': return 'risk-high';
    default: return '';
  }
}
%> 